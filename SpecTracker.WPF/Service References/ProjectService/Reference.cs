//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpecTracker.WPF.ProjectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/ListProjects", ReplyAction="http://tempuri.org/IProjectService/ListProjectsResponse")]
        SpecTracker.Core.DAL.Project[] ListProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/ListProjects", ReplyAction="http://tempuri.org/IProjectService/ListProjectsResponse")]
        System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project[]> ListProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/LoadProject", ReplyAction="http://tempuri.org/IProjectService/LoadProjectResponse")]
        SpecTracker.Core.DAL.Project LoadProject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/LoadProject", ReplyAction="http://tempuri.org/IProjectService/LoadProjectResponse")]
        System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project> LoadProjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/SaveProject", ReplyAction="http://tempuri.org/IProjectService/SaveProjectResponse")]
        SpecTracker.Core.DAL.Project SaveProject(SpecTracker.Core.DAL.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/SaveProject", ReplyAction="http://tempuri.org/IProjectService/SaveProjectResponse")]
        System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project> SaveProjectAsync(SpecTracker.Core.DAL.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/RemoveProject", ReplyAction="http://tempuri.org/IProjectService/RemoveProjectResponse")]
        bool RemoveProject(SpecTracker.Core.DAL.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/RemoveProject", ReplyAction="http://tempuri.org/IProjectService/RemoveProjectResponse")]
        System.Threading.Tasks.Task<bool> RemoveProjectAsync(SpecTracker.Core.DAL.Project project);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : SpecTracker.WPF.ProjectService.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<SpecTracker.WPF.ProjectService.IProjectService>, SpecTracker.WPF.ProjectService.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SpecTracker.Core.DAL.Project[] ListProjects() {
            return base.Channel.ListProjects();
        }
        
        public System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project[]> ListProjectsAsync() {
            return base.Channel.ListProjectsAsync();
        }
        
        public SpecTracker.Core.DAL.Project LoadProject(int id) {
            return base.Channel.LoadProject(id);
        }
        
        public System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project> LoadProjectAsync(int id) {
            return base.Channel.LoadProjectAsync(id);
        }
        
        public SpecTracker.Core.DAL.Project SaveProject(SpecTracker.Core.DAL.Project project) {
            return base.Channel.SaveProject(project);
        }
        
        public System.Threading.Tasks.Task<SpecTracker.Core.DAL.Project> SaveProjectAsync(SpecTracker.Core.DAL.Project project) {
            return base.Channel.SaveProjectAsync(project);
        }
        
        public bool RemoveProject(SpecTracker.Core.DAL.Project project) {
            return base.Channel.RemoveProject(project);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveProjectAsync(SpecTracker.Core.DAL.Project project) {
            return base.Channel.RemoveProjectAsync(project);
        }
    }
}
